#include "das-fft.h"

int main()
{
    n0 = 50;
    double testdata[] = {
        0.537667139546100,
        1.833885014595087,
        -2.258846861003648,
        0.862173320368121,
        0.318765239858981,
        -1.307688296305273,
        -0.433592022305684,
        0.342624466538650,
        3.578396939725761,
        2.769437029884877,
        -1.349886940156521,
        3.034923466331855,
        0.725404224946106,
        -0.063054873189656,
        0.714742903826096,
        -0.204966058299775,
        -0.124144348216312,
        1.489697607785465,
        1.409034489800479,
        1.417192413429614,
        0.671497133608081,
        -1.207486922685038,
        0.717238651328838,
        1.630235289164729,
        0.488893770311789,
        1.034693009917860,
        0.726885133383238,
        -0.303440924786016,
        0.293871467096658,
        -0.787282803758638,
        0.888395631757642,
        -1.147070106969151,
        -1.068870458168032,
        -0.809498694424876,
        -2.944284161994896,
        1.438380292815098,
        0.325190539456198,
        -0.754928319169703,
        1.370298540095228,
        -1.711516418853698,
        -0.102242446085491,
        -0.241447041607358,
        0.319206739165502,
        0.312858596637428,
        -0.864879917324456,
        -0.030051296196269,
        -0.164879019209038,
        0.627707287528727,
        1.093265669039484,
        1.109273297614398,
    };
    X.resize(n0);
    for (int i = 0; i < n0; i++)
    {
        X[i] = testdata[i];
    }

    for (auto i : X)
        cout << i << ", ";
    cout << endl;

    INIT_PARS();
    /*
    nPoint_hal_win = 1;
    fNyquist = 62.5;
    INTERP_ZF[5] = fNyquist;
    df = 2.0 * fNyquist / (double)nfft;
    */

    INIT_SPACE();

    cout << "shapingFilt(S =  " << shapingFilt.size() << " ) : ";
    for (auto i : shapingFilt)
        cout << i << ", ";
    cout << endl;

    //fft_pre_processing_test(X, TC);

    PRE_PROCESSING(X, TC);

    cout << "After fft/ifft(S =  " << TC.size() << " ) : ";
    for (auto i : TC)
        cout << i << ", ";
    cout << endl;
}